[{"D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-firebase\\src\\index.js":"1","D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-firebase\\src\\serviceWorker.js":"2","D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-firebase\\src\\App.js":"3","D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-firebase\\src\\app\\store.js":"4","D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-firebase\\src\\services\\firebase.js":"5","D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-firebase\\src\\components\\Login.js":"6","D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-firebase\\src\\components\\SignUp.js":"7","D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-firebase\\src\\components\\PrivateRoute.js":"8","D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-firebase\\src\\components\\PasswordReset.js":"9","D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-firebase\\src\\components\\Application.js":"10","D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-firebase\\src\\components\\UserProvider.js":"11","D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-firebase\\src\\features\\withJavaBackend\\gymSlice.js":"12","D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-firebase\\src\\features\\withJavaBackend\\userSlice.js":"13","D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-firebase\\src\\features\\withJavaBackend\\Passes.js":"14","D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-firebase\\src\\features\\withJavaBackend\\UserSearch.js":"15","D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-firebase\\src\\features\\withJavaBackend\\CreateUserForm.js":"16","D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-firebase\\src\\features\\withJavaBackend\\UserDetails.js":"17","D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-firebase\\src\\features\\withJavaBackend\\AddGymDialog.js":"18","D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-firebase\\src\\features\\withJavaBackend\\UpdateResultDialog.js":"19","D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-firebase\\src\\features\\withJavaBackend\\ConfirmationDialog.js":"20"},{"size":1178,"mtime":1610632341796,"results":"21","hashOfConfig":"22"},{"size":5141,"mtime":499162500000,"results":"23","hashOfConfig":"22"},{"size":334,"mtime":1610635944214,"results":"24","hashOfConfig":"22"},{"size":1453,"mtime":1610636651602,"results":"25","hashOfConfig":"22"},{"size":2231,"mtime":1610637965427,"results":"26","hashOfConfig":"22"},{"size":3538,"mtime":1610636520891,"results":"27","hashOfConfig":"22"},{"size":4269,"mtime":1610636556990,"results":"28","hashOfConfig":"22"},{"size":653,"mtime":1610634578756,"results":"29","hashOfConfig":"22"},{"size":2759,"mtime":1610636520894,"results":"30","hashOfConfig":"22"},{"size":976,"mtime":1610636651607,"results":"31","hashOfConfig":"22"},{"size":709,"mtime":1610636520894,"results":"32","hashOfConfig":"22"},{"size":2242,"mtime":1610541573218,"results":"33","hashOfConfig":"22"},{"size":8121,"mtime":1610613341119,"results":"34","hashOfConfig":"22"},{"size":3614,"mtime":1610633366696,"results":"35","hashOfConfig":"22"},{"size":1593,"mtime":1610549785981,"results":"36","hashOfConfig":"22"},{"size":9160,"mtime":1610613974449,"results":"37","hashOfConfig":"22"},{"size":5670,"mtime":1610630283148,"results":"38","hashOfConfig":"22"},{"size":2894,"mtime":1610541640233,"results":"39","hashOfConfig":"22"},{"size":1462,"mtime":1610549785997,"results":"40","hashOfConfig":"22"},{"size":2785,"mtime":1610613614647,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1kuvgxc",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},"D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-firebase\\src\\index.js",[],["92","93"],"D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-firebase\\src\\serviceWorker.js",[],"D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-firebase\\src\\App.js",[],"D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-firebase\\src\\app\\store.js",[],"D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-firebase\\src\\services\\firebase.js",[],"D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-firebase\\src\\components\\Login.js",["94"],"import React, { useState } from \"react\";\r\nimport { useFirebase } from \"react-redux-firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { auth } from '../services/firebase'\r\n\r\nexport function Login() {\r\n\r\n    const history = useHistory();\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState(null);\r\n    const signInWithEmailAndPasswordHandler = (event, email, password) => {\r\n        event.preventDefault();\r\n        auth.signInWithEmailAndPassword(email, password).catch(error => {\r\n            setError(\"Error signing in with password and email!\");\r\n            console.error(\"Error signing in with password and email\", error);\r\n        });\r\n    };\r\n\r\n    const onChangeHandler = (event) => {\r\n        const { name, value } = event.currentTarget;\r\n\r\n        if (name === 'userEmail') {\r\n            setEmail(value);\r\n        }\r\n        else if (name === 'userPassword') {\r\n            setPassword(value);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"mt-8\">\r\n            <h1 className=\"text-3xl mb-2 text-center font-bold\">Sign In</h1>\r\n            <div className=\"border border-blue-400 mx-auto w-11/12 md:w-2/4 rounded py-8 px-4 md:px-8\">\r\n                {error !== null && <div className=\"py-4 bg-red-600 w-full text-white text-center mb-3\">{error}</div>}\r\n                <form className=\"\">\r\n                    <label htmlFor=\"userEmail\" className=\"block\">\r\n                        Email:\r\n          </label>\r\n                    <input\r\n                        type=\"email\"\r\n                        className=\"my-1 p-1 w-full\"\r\n                        name=\"userEmail\"\r\n                        value={email}\r\n                        placeholder=\"E.g: faruq123@gmail.com\"\r\n                        id=\"userEmail\"\r\n                        onChange={(event) => onChangeHandler(event)}\r\n                    />\r\n                    <label htmlFor=\"userPassword\" className=\"block\">\r\n                        Password:\r\n          </label>\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"mt-1 mb-3 p-1 w-full\"\r\n                        name=\"userPassword\"\r\n                        value={password}\r\n                        placeholder=\"Your Password\"\r\n                        id=\"userPassword\"\r\n                        onChange={(event) => onChangeHandler(event)}\r\n                    />\r\n                    <button className=\"bg-green-400 hover:bg-green-500 w-full py-2 text-white\" onClick={(event) => { signInWithEmailAndPasswordHandler(event, email, password) }}>\r\n                        Sign in\r\n          </button>\r\n                </form>\r\n                <p className=\"text-center my-3\">or</p>\r\n                <button\r\n                    className=\"bg-red-500 hover:bg-red-600 w-full py-2 text-white\">\r\n                    Sign in with Google\r\n        </button>\r\n                <p className=\"text-center my-3\">\r\n                    Don't have an account?{\" \"}\r\n                    <button onClick={() => history.push('/signUp')} className=\"text-blue-500 hover:text-blue-600\">\r\n                        Sign up here\r\n                        </button>{\" \"}\r\n                    <br />{\" \"}\r\n                    <button onClick={() => history.push('/passwordReset')} className=\"text-blue-500 hover:text-blue-600\">\r\n                        Forgot Password?\r\n                        </button>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};","D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-firebase\\src\\components\\SignUp.js",[],"D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-firebase\\src\\components\\PrivateRoute.js",[],["95","96"],"D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-firebase\\src\\components\\PasswordReset.js",["97"],"import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { auth } from '../services/firebase'\r\n\r\nexport function PasswordReset() {\r\n    const history = useHistory();\r\n    const [email, setEmail] = useState(\"\");\r\n    const [emailHasBeenSent, setEmailHasBeenSent] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const onChangeHandler = event => {\r\n        const { name, value } = event.currentTarget;\r\n        if (name === \"userEmail\") {\r\n            setEmail(value);\r\n        }\r\n    };\r\n\r\n    const sendResetEmail = event => {\r\n        event.preventDefault();\r\n        auth\r\n            .sendPasswordResetEmail(email)\r\n            .then(() => {\r\n                setEmailHasBeenSent(true);\r\n                setTimeout(() => { setEmailHasBeenSent(false) }, 3000);\r\n            })\r\n            .catch(() => {\r\n                setError(\"Error resetting password\");\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"mt-8\">\r\n            <h1 className=\"text-xl text-center font-bold mb-3\">\r\n                Reset your Password\r\n      </h1>\r\n            <div className=\"border border-blue-300 mx-auto w-11/12 md:w-2/4 rounded py-8 px-4 md:px-8\">\r\n                <form action=\"\">\r\n                    {emailHasBeenSent && (\r\n                        <div className=\"py-3 bg-green-400 w-full text-white text-center mb-3\">\r\n                            An email has been sent to you!\r\n                        </div>\r\n                    )}\r\n                    {error !== null && (\r\n                        <div className=\"py-3 bg-red-600 w-full text-white text-center mb-3\">\r\n                            {error}\r\n                        </div>\r\n                    )}\r\n                    <label htmlFor=\"userEmail\" className=\"w-full block\">\r\n                        Email:\r\n          </label>\r\n                    <input\r\n                        type=\"email\"\r\n                        name=\"userEmail\"\r\n                        id=\"userEmail\"\r\n                        value={email}\r\n                        placeholder=\"Input your email\"\r\n                        onChange={onChangeHandler}\r\n                        className=\"mb-3 w-full px-1 py-2\"\r\n                    />\r\n                    <button\r\n                        className=\"w-full bg-blue-400 text-white py-3\"\r\n                    >\r\n                        Send me a reset link\r\n          </button>\r\n                </form>\r\n                <button\r\n                    onClick={() => history.push('/')}\r\n                    className=\"my-2 text-blue-700 hover:text-blue-800 text-center block\"\r\n                >\r\n                    &larr; back to sign in page\r\n        </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};","D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-firebase\\src\\components\\Application.js",[],"D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-firebase\\src\\components\\UserProvider.js",[],"D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-firebase\\src\\features\\withJavaBackend\\gymSlice.js",[],"D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-firebase\\src\\features\\withJavaBackend\\userSlice.js",[],"D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-firebase\\src\\features\\withJavaBackend\\Passes.js",["98","99","100","101","102","103","104","105","106","107","108"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  addGymToUser,\r\n  decrementPass,\r\n  fetchUserByUsername,\r\n  incrementPass,\r\n  requestConfirmation,\r\n  resetUser,\r\n  selectError,\r\n  selectIsLoadingUser,\r\n  selectIsLoadingUpdateUser,\r\n  selectUser,\r\n  selectShowConfirmation,\r\n  selectDatabaseUser,\r\n  differentiateUserPasses,\r\n  showAddGymDialog\r\n} from './userSlice';\r\nimport {\r\n  fetchGymById,\r\n  fetchGyms,\r\n  selectGyms,\r\n  selectGymNameForId,\r\n} from './gymSlice';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { ConfirmationDialog } from './ConfirmationDialog';\r\nimport { UpdateResultDialog } from './UpdateResultDialog';\r\nimport { AddGymDialog } from './AddGymDialog';\r\nimport { UserDetails } from './UserDetails';\r\nimport { UserSearch } from './UserSearch';\r\nimport { CreateUserForm } from './CreateUserForm';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Button from '@material-ui/core/Button';\r\nimport ReplayIcon from '@material-ui/icons/Replay';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nimport { useHistory } from \"react-router-dom\"; // TODO remove\r\n\r\nexport function Passes() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory(); // TODO remove\r\n\r\n  useEffect(() => {\r\n    if (gyms.length === 0) {\r\n      dispatch(fetchGyms());\r\n    }\r\n  }, [])\r\n\r\n  const user = useSelector(selectUser);\r\n  const databaseUser = useSelector(selectDatabaseUser);\r\n  const isLoadingUser = useSelector(selectIsLoadingUser);\r\n  const isLoadingUpdateUser = useSelector(selectIsLoadingUpdateUser);\r\n  const gyms = useSelector(selectGyms);\r\n\r\n  return (\r\n    <Container maxWidth=\"xs\">\r\n      <header style={{ height: '100px', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n      \r\n      Welcome to your climbing pass wallet!\r\n      \r\n      &nbsp; &nbsp;\r\n        <CreateUserForm />\r\n      </header>\r\n\r\n      <button onClick={() => history.push('/login')}>login</button>  {/*TODO remove*/}\r\n\r\n      <UserSearch />\r\n      {\r\n        isLoadingUser ?\r\n          <CircularProgress />\r\n          :\r\n          user !== null ?\r\n            <div>\r\n\r\n              <UserDetails />\r\n              <Button\r\n                aria-label=\"addGym\"\r\n                variant=\"outlined\"\r\n                onClick={() => dispatch(showAddGymDialog())}\r\n              >\r\n                Add gym\r\n              </Button>\r\n              <AddGymDialog />\r\n\r\n              <br />\r\n              <br />\r\n\r\n              {isLoadingUpdateUser ?\r\n                <CircularProgress />\r\n                :\r\n                <div>\r\n                  <Button\r\n                  variant=\"outlined\"\r\n                  onClick={() => dispatch(resetUser())}\r\n                >\r\n                    Reset &nbsp; <ReplayIcon />\r\n                </Button>\r\n                &nbsp; &nbsp;\r\n                <Button\r\n                  disabled={Object.keys(differentiateUserPasses(databaseUser, user)).length === 0}\r\n                  aria-label=\"saveChanges\"\r\n                  color=\"primary\"\r\n                  variant=\"outlined\"\r\n                  onClick={() => dispatch(requestConfirmation())}\r\n                >\r\n                    Save changes &nbsp; <SaveIcon />\r\n                </Button>\r\n              </div>\r\n              }\r\n              <ConfirmationDialog />\r\n\r\n              <UpdateResultDialog />\r\n              <br />\r\n              <br />\r\n            </div>\r\n            :\r\n            null\r\n      }\r\n    </Container>\r\n  );\r\n}\r\n","D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-firebase\\src\\features\\withJavaBackend\\UserSearch.js",["109","110"],"import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n    fetchUserByUsername,\r\n    selectFetchUserError,\r\n} from './userSlice';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { blue } from '@material-ui/core/colors';\r\n\r\nexport function UserSearch() {\r\n    const dispatch = useDispatch();\r\n    const [username, setUsername] = useState('');\r\n    const fetchUserError = useSelector(selectFetchUserError);\r\n\r\n    return (\r\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n            <TextField\r\n                error={fetchUserError !== null}\r\n                id=\"outlined-error-helper-text\"\r\n                label=\"Enter username\"\r\n                helperText={fetchUserError}\r\n                variant=\"outlined\"\r\n                value={username}\r\n                onChange={e => setUsername(e.target.value)}\r\n                onKeyDown={e => {\r\n                    if (e.key === 'Enter') {\r\n                        dispatch(fetchUserByUsername(username))\r\n                    }\r\n                }}\r\n            />\r\n            &nbsp; &nbsp;\r\n            <Button\r\n                disabled={username === ''}\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                    dispatch(fetchUserByUsername(username))\r\n                }}\r\n            >\r\n                Search\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\n","D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-firebase\\src\\features\\withJavaBackend\\CreateUserForm.js",["111","112","113","114","115","116","117","118","119","120","121","122","123"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n    createUser,\r\n    closeCreateUserDialog,\r\n    selectCreateUserError,\r\n    selectIsLoadingCreateUser,\r\n    selectShowCreateUserDialog,\r\n    selectSuccessfullyCreatedUser,\r\n    setSuccessfullyCreatedUser,\r\n    showCreateUserDialog,\r\n    fetchUserByUsername,\r\n} from './userSlice';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Input from '@material-ui/core/Input';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Select from '@material-ui/core/Select';\r\nimport { fetchGyms, selectGyms } from './gymSlice';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        padding: theme.spacing(3),\r\n        textAlign: 'center',\r\n    },\r\n    submitPaper: {\r\n        padding: theme.spacing(0),\r\n        textAlign: 'center',\r\n    },\r\n}));\r\n\r\nconst newUserTemplate = {\r\n    username: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    passes: {}\r\n};\r\n\r\nexport function CreateUserForm() {\r\n    const dispatch = useDispatch();\r\n    const open = useSelector(selectShowCreateUserDialog);\r\n    const isLoadingCreateUser = useSelector(selectIsLoadingCreateUser);\r\n    const createUserError = useSelector(selectCreateUserError);\r\n    const successfullyCreatedUser = useSelector(selectSuccessfullyCreatedUser);\r\n\r\n    const [newUser, setNewUser] = useState(newUserTemplate);\r\n    const [usernameError, setUsernameError] = useState('');\r\n    const [firstNameError, setFirstNameError] = useState('');\r\n    const [lastNameError, setLastNameError] = useState('');\r\n    const [emailError, setEmailError] = useState('');\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleSubmit = () => {\r\n        dispatch(createUser(newUser));\r\n        // dispatch(closeCreateUserDialog());\r\n    };\r\n\r\n    const handleOpen = () => {\r\n        dispatch(showCreateUserDialog())\r\n    }\r\n\r\n    const handleClose = () => {\r\n        dispatch(setSuccessfullyCreatedUser(false));\r\n        dispatch(closeCreateUserDialog());\r\n        if (successfullyCreatedUser) {\r\n            dispatch(fetchUserByUsername(newUser.username));\r\n            dispatch(setSuccessfullyCreatedUser(false));\r\n            setNewUser(newUserTemplate);\r\n        }\r\n    }\r\n\r\n    const handleUsernameChange = (event) => {\r\n        const username = event.target.value;\r\n        validateUsername(username);\r\n        setNewUser({\r\n            ...newUser,\r\n            username\r\n        })\r\n    }\r\n\r\n    const handleFirstNameChange = (event) => {\r\n        const firstName = event.target.value;\r\n        validateFirstName(firstName);\r\n        setNewUser({\r\n            ...newUser,\r\n            firstName\r\n        })\r\n    }\r\n\r\n    const handleLastNameChange = (event) => {\r\n        const lastName = event.target.value;\r\n        validateLastName(lastName);\r\n        setNewUser({\r\n            ...newUser,\r\n            lastName\r\n        })\r\n    }\r\n\r\n    const handleEmailChange = (event) => {\r\n        const email = event.target.value;\r\n        setNewUser({\r\n            ...newUser,\r\n            email\r\n        })\r\n    }\r\n\r\n    const validateFirstName = firstName => {\r\n        if (firstName === '') {\r\n            setFirstNameError(\"First name cannot be blank.\");\r\n        } else if (!firstName.match(/^[a-zA-Z]*$/g)) {\r\n            setFirstNameError(\"Alphabetical characters only.\");\r\n        } else {\r\n            setFirstNameError('');\r\n        }\r\n    }\r\n\r\n    const validateLastName = lastName => {\r\n        if (lastName === '') {\r\n            setLastNameError(\"Last name cannot be blank.\");\r\n        } else if (!lastName.match(/^[a-zA-Z]*$/g)) {\r\n            setLastNameError(\"Alphabetical characters only.\");\r\n        } else {\r\n            setLastNameError('');\r\n        }\r\n    }\r\n\r\n    const validateUsername = username => {\r\n        if (username === '') {\r\n            setUsernameError(\"Username cannot be blank.\");\r\n        } else if (!username.match(/^[a-zA-Z0-9_]*$/g)) {\r\n            setUsernameError(\"Alphanumeric characters and underscores only.\");\r\n        } else {\r\n            setUsernameError('');\r\n        }\r\n    }\r\n\r\n    const validateEmail = () => {\r\n        if (newUser.email !== undefined) {\r\n            const email = newUser.email;\r\n            if (email === '') {\r\n                setEmailError(\"Email cannot be blank.\");\r\n            } else if (!email.match(/^\\S+@\\S+[\\.][0-9a-z]+$/g)) {\r\n                setEmailError(\"Email in incorrect format.\");\r\n            } else {\r\n                setEmailError('');\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                onClick={handleOpen}\r\n            >\r\n                Register\r\n            </Button>\r\n            <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n                <DialogTitle id=\"add-gym-dialog-title\">User Registration</DialogTitle>\r\n                {\r\n                    createUserError !== null ?\r\n                        <span style={{ color: 'red', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                            {createUserError}\r\n                        </span>\r\n                        :\r\n                        null\r\n                }\r\n                <Paper className={classes.paper} elevation={0}>\r\n                    <TextField\r\n                        error={usernameError !== ''}\r\n                        label=\"Username\"\r\n                        helperText={usernameError}\r\n                        variant=\"outlined\"\r\n                        value={newUser.username}\r\n                        onChange={handleUsernameChange}\r\n                    />\r\n                    <br />\r\n                    <br />\r\n                    <TextField\r\n                        error={firstNameError !== ''}\r\n                        label=\"First name\"\r\n                        helperText={firstNameError}\r\n                        variant=\"outlined\"\r\n                        value={newUser.firstName}\r\n                        onChange={handleFirstNameChange}\r\n                    />\r\n                    <br />\r\n                    <br />\r\n                    <TextField\r\n                        error={lastNameError !== ''}\r\n                        label=\"Last name\"\r\n                        helperText={lastNameError}\r\n                        variant=\"outlined\"\r\n                        value={newUser.lastName}\r\n                        onChange={handleLastNameChange}\r\n                    />\r\n                    <br />\r\n                    <br />\r\n                    <TextField\r\n                        error={emailError !== ''}\r\n                        label=\"Email address\"\r\n                        helperText={emailError}\r\n                        variant=\"outlined\"\r\n                        value={newUser.email}\r\n                        onChange={handleEmailChange}\r\n                        onBlur={validateEmail}\r\n                    />\r\n                </Paper>\r\n                <Paper className={classes.submitPaper} elevation={0}>\r\n                    {\r\n                        isLoadingCreateUser ? <CircularProgress />\r\n                            :\r\n                            successfullyCreatedUser ?\r\n                                <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>Success! &nbsp;<DoneIcon /></div>\r\n                                :\r\n                                <Button\r\n                                    disabled={usernameError !== '' && firstNameError !== '' && lastNameError !== '' && emailError !== ''}\r\n                                    aria-label=\"submitNewUser\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={handleSubmit}\r\n                                >\r\n                                    Submit\r\n                            </Button>\r\n                    }\r\n                </Paper>\r\n                <DialogActions>\r\n                    <Button\r\n                        color=\"primary\"\r\n                        onClick={handleClose}\r\n                    >\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n","D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-firebase\\src\\features\\withJavaBackend\\UserDetails.js",["124","125","126","127"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n    decrementPass,\r\n    differentiateUserPasses,\r\n    incrementPass,\r\n    selectUser,\r\n    selectDatabaseUser,\r\n    resetUser,\r\n} from './userSlice';\r\nimport {\r\n    fetchGyms,\r\n    selectGyms,\r\n} from './gymSlice';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport { blue } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n    },\r\n    avatar: {\r\n        backgroundColor: blue[100],\r\n        color: blue[600],\r\n    },\r\n}));\r\n\r\nexport function UserDetails() {\r\n    const dispatch = useDispatch();\r\n\r\n    const databaseUser = useSelector(selectDatabaseUser);\r\n    const user = useSelector(selectUser);\r\n    const gyms = useSelector(selectGyms);\r\n\r\n    const passDifferences = databaseUser === null ? {} : differentiateUserPasses(databaseUser, user);\r\n\r\n    const getTextStyle = (gym) => {\r\n        if (passDifferences[gym] !== undefined) {\r\n            return { color: blue[600], fontWeight: 'bold', fontSize: '14px' };\r\n        }\r\n        return { fontSize: '14px' };\r\n    }\r\n\r\n    const classes = useStyles();\r\n    var counter = 0;\r\n    console.log('otan', user.passes.size)\r\n\r\n    return (\r\n        user !== null ?\r\n            <div className={classes.root}>\r\n                <List>\r\n                    <ListItem style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                        <Paper className={classes.paper} elevation={2}>\r\n                            {user['firstName'] + ' ' + user['lastName'] + ' ('}<i>{user['username']}</i>{')'}\r\n                        </Paper>\r\n                    </ListItem>\r\n                    {   \r\n                        user !== null && user['passes'] !== null ?\r\n                            Object.keys(user['passes']).length !== 0 ?\r\n                                Object.keys(user['passes'])\r\n                                    .sort()\r\n                                    .map(gym => {\r\n                                        counter += 1;\r\n                                        return <div key={gym}>\r\n                                            {counter !== 1 ? <Divider variant=\"middle\" /> : null}\r\n                                            <ListItem style={{ height: '60px' }}>\r\n                                                <Grid container>\r\n                                                    <Grid item xs={2} style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                                                        <Avatar className={classes.avatar}>\r\n                                                            {gym}\r\n                                                        </Avatar>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={6} style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                                                        <span style={{ fontSize: '12px' }}>{gyms.find(g => g.id === gym)['name']}</span>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={1} style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                                                        <IconButton aria-label=\"decrementPass\" onClick={() => dispatch(decrementPass(gym))}>\r\n                                                            <RemoveIcon />\r\n                                                        </IconButton>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={2} style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                                                        <span style={getTextStyle(gym)}>{user['passes'][gym]}</span>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={1} style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                                                        <IconButton aria-label=\"incrementPass\" onClick={() => dispatch(incrementPass(gym))}>\r\n                                                            <AddIcon />\r\n                                                        </IconButton>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </ListItem>\r\n                                        </div>\r\n                                    })\r\n                                :\r\n                                <ListItem style={{ height: '60px', display: 'flex', alignItems: 'center', justifyContent: 'center' }}><b>No passes here yet. Try adding some!</b></ListItem>\r\n                            :\r\n                            null\r\n\r\n                    }\r\n                </List>\r\n            </div>\r\n            :\r\n            null\r\n    );\r\n}","D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-firebase\\src\\features\\withJavaBackend\\AddGymDialog.js",["128","129","130","131","132","133","134","135","136","137"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n    addGymToUser,\r\n    closeAddGymDialog,\r\n    selectShowAddGymDialog,\r\n    selectUser\r\n} from './userSlice';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { fetchGyms, selectGyms } from './gymSlice';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\n\r\nexport function AddGymDialog() {\r\n    const dispatch = useDispatch();\r\n    const gyms = useSelector(selectGyms);\r\n    const user = useSelector(selectUser);\r\n    const showAddGymDialog = useSelector(selectShowAddGymDialog);\r\n\r\n    const handleSelect = (gymId) => {\r\n        dispatch(addGymToUser(gymId));\r\n        dispatch(closeAddGymDialog());\r\n    };\r\n\r\n    const handleClose = () => {\r\n        dispatch(closeAddGymDialog());\r\n    }\r\n\r\n    return (\r\n        <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={showAddGymDialog}>\r\n            <DialogTitle id=\"add-gym-dialog-title\">Add new gym:</DialogTitle>\r\n            <List>\r\n                {\r\n                    gyms.map(gym => {\r\n                        if (user.passes != null && !Object.keys(user.passes).includes(gym.id)) {\r\n                            return <ListItem key={gym.id} button onClick={() => handleSelect(gym.id)}>\r\n                                <ListItemText primary={gym.name} />\r\n                            </ListItem>\r\n                        }\r\n                    })\r\n                }\r\n            </List>\r\n        </Dialog>\r\n\r\n        // <div>\r\n        //     <FormControl className={classes.formControl}>\r\n        //         <InputLabel htmlFor=\"gym-native-simple\">Add gym</InputLabel>\r\n        //         <Select\r\n        //             native\r\n        //             value={gym}\r\n        //             onChange={handleChange}\r\n        //             inputProps={{\r\n        //                 name: 'gym',\r\n        //                 id: 'gym-native-simple',\r\n        //             }}\r\n        //         >\r\n        //             <option aria-label=\"None\" value=\"\" />\r\n        //             {optionDivs}\r\n        //         </Select>\r\n        //     </FormControl>\r\n        // </div>\r\n    );\r\n}\r\n","D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-firebase\\src\\features\\withJavaBackend\\UpdateResultDialog.js",[],"D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-firebase\\src\\features\\withJavaBackend\\ConfirmationDialog.js",[],["138","139"],{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":2,"column":10,"nodeType":"146","messageId":"147","endLine":2,"endColumn":21},{"ruleId":"140","replacedBy":"148"},{"ruleId":"142","replacedBy":"149"},{"ruleId":"144","severity":1,"message":"150","line":17,"column":11,"nodeType":"146","messageId":"147","endLine":17,"endColumn":25},{"ruleId":"144","severity":1,"message":"151","line":1,"column":28,"nodeType":"146","messageId":"147","endLine":1,"endColumn":36},{"ruleId":"144","severity":1,"message":"152","line":4,"column":3,"nodeType":"146","messageId":"147","endLine":4,"endColumn":15},{"ruleId":"144","severity":1,"message":"153","line":5,"column":3,"nodeType":"146","messageId":"147","endLine":5,"endColumn":16},{"ruleId":"144","severity":1,"message":"154","line":6,"column":3,"nodeType":"146","messageId":"147","endLine":6,"endColumn":22},{"ruleId":"144","severity":1,"message":"155","line":7,"column":3,"nodeType":"146","messageId":"147","endLine":7,"endColumn":16},{"ruleId":"144","severity":1,"message":"156","line":10,"column":3,"nodeType":"146","messageId":"147","endLine":10,"endColumn":14},{"ruleId":"144","severity":1,"message":"157","line":14,"column":3,"nodeType":"146","messageId":"147","endLine":14,"endColumn":25},{"ruleId":"144","severity":1,"message":"158","line":20,"column":3,"nodeType":"146","messageId":"147","endLine":20,"endColumn":15},{"ruleId":"144","severity":1,"message":"159","line":23,"column":3,"nodeType":"146","messageId":"147","endLine":23,"endColumn":21},{"ruleId":"144","severity":1,"message":"160","line":25,"column":10,"nodeType":"146","messageId":"147","endLine":25,"endColumn":20},{"ruleId":"161","severity":1,"message":"162","line":49,"column":6,"nodeType":"163","endLine":49,"endColumn":8,"suggestions":"164"},{"ruleId":"144","severity":1,"message":"160","line":7,"column":10,"nodeType":"146","messageId":"147","endLine":7,"endColumn":20},{"ruleId":"144","severity":1,"message":"165","line":10,"column":10,"nodeType":"146","messageId":"147","endLine":10,"endColumn":14},{"ruleId":"144","severity":1,"message":"166","line":1,"column":17,"nodeType":"146","messageId":"147","endLine":1,"endColumn":26},{"ruleId":"144","severity":1,"message":"167","line":18,"column":8,"nodeType":"146","messageId":"147","endLine":18,"endColumn":12},{"ruleId":"144","severity":1,"message":"168","line":19,"column":8,"nodeType":"146","messageId":"147","endLine":19,"endColumn":16},{"ruleId":"144","severity":1,"message":"169","line":20,"column":8,"nodeType":"146","messageId":"147","endLine":20,"endColumn":22},{"ruleId":"144","severity":1,"message":"170","line":21,"column":8,"nodeType":"146","messageId":"147","endLine":21,"endColumn":20},{"ruleId":"144","severity":1,"message":"171","line":23,"column":8,"nodeType":"146","messageId":"147","endLine":23,"endColumn":18},{"ruleId":"144","severity":1,"message":"172","line":24,"column":8,"nodeType":"146","messageId":"147","endLine":24,"endColumn":19},{"ruleId":"144","severity":1,"message":"173","line":25,"column":8,"nodeType":"146","messageId":"147","endLine":25,"endColumn":22},{"ruleId":"144","severity":1,"message":"174","line":26,"column":8,"nodeType":"146","messageId":"147","endLine":26,"endColumn":13},{"ruleId":"144","severity":1,"message":"175","line":31,"column":8,"nodeType":"146","messageId":"147","endLine":31,"endColumn":14},{"ruleId":"144","severity":1,"message":"176","line":32,"column":10,"nodeType":"146","messageId":"147","endLine":32,"endColumn":19},{"ruleId":"144","severity":1,"message":"177","line":32,"column":21,"nodeType":"146","messageId":"147","endLine":32,"endColumn":31},{"ruleId":"178","severity":1,"message":"179","line":157,"column":47,"nodeType":"180","messageId":"181","endLine":157,"endColumn":48,"suggestions":"182"},{"ruleId":"144","severity":1,"message":"166","line":1,"column":17,"nodeType":"146","messageId":"147","endLine":1,"endColumn":26},{"ruleId":"144","severity":1,"message":"151","line":1,"column":28,"nodeType":"146","messageId":"147","endLine":1,"endColumn":36},{"ruleId":"144","severity":1,"message":"183","line":9,"column":5,"nodeType":"146","messageId":"147","endLine":9,"endColumn":14},{"ruleId":"144","severity":1,"message":"176","line":12,"column":5,"nodeType":"146","messageId":"147","endLine":12,"endColumn":14},{"ruleId":"144","severity":1,"message":"166","line":1,"column":17,"nodeType":"146","messageId":"147","endLine":1,"endColumn":26},{"ruleId":"144","severity":1,"message":"151","line":1,"column":28,"nodeType":"146","messageId":"147","endLine":1,"endColumn":36},{"ruleId":"144","severity":1,"message":"184","line":12,"column":8,"nodeType":"146","messageId":"147","endLine":12,"endColumn":14},{"ruleId":"144","severity":1,"message":"169","line":15,"column":8,"nodeType":"146","messageId":"147","endLine":15,"endColumn":22},{"ruleId":"144","severity":1,"message":"171","line":17,"column":8,"nodeType":"146","messageId":"147","endLine":17,"endColumn":18},{"ruleId":"144","severity":1,"message":"172","line":18,"column":8,"nodeType":"146","messageId":"147","endLine":18,"endColumn":19},{"ruleId":"144","severity":1,"message":"175","line":19,"column":8,"nodeType":"146","messageId":"147","endLine":19,"endColumn":14},{"ruleId":"144","severity":1,"message":"176","line":20,"column":10,"nodeType":"146","messageId":"147","endLine":20,"endColumn":19},{"ruleId":"144","severity":1,"message":"185","line":22,"column":7,"nodeType":"146","messageId":"147","endLine":22,"endColumn":16},{"ruleId":"186","severity":1,"message":"187","line":53,"column":34,"nodeType":"188","messageId":"189","endLine":53,"endColumn":36},{"ruleId":"140","replacedBy":"190"},{"ruleId":"142","replacedBy":"191"},"no-native-reassign",["192"],"no-negated-in-lhs",["193"],"no-unused-vars","'useFirebase' is defined but never used.","Identifier","unusedVar",["192"],["193"],"'sendResetEmail' is assigned a value but never used.","'useState' is defined but never used.","'addGymToUser' is defined but never used.","'decrementPass' is defined but never used.","'fetchUserByUsername' is defined but never used.","'incrementPass' is defined but never used.","'selectError' is defined but never used.","'selectShowConfirmation' is defined but never used.","'fetchGymById' is defined but never used.","'selectGymNameForId' is defined but never used.","'makeStyles' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'gyms.length'. Either include them or remove the dependency array.","ArrayExpression",["194"],"'blue' is defined but never used.","'useEffect' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemAvatar' is defined but never used.","'ListItemText' is defined but never used.","'InputLabel' is defined but never used.","'FormControl' is defined but never used.","'FormHelperText' is defined but never used.","'Input' is defined but never used.","'Select' is defined but never used.","'fetchGyms' is defined but never used.","'selectGyms' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["195","196"],"'resetUser' is defined but never used.","'Button' is defined but never used.","'useStyles' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["192"],["193"],"no-global-assign","no-unsafe-negation",{"desc":"197","fix":"198"},{"messageId":"199","fix":"200","desc":"201"},{"messageId":"202","fix":"203","desc":"204"},"Update the dependencies array to be: [dispatch, gyms.length]",{"range":"205","text":"206"},"removeEscape",{"range":"207","text":"208"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"209","text":"210"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[1455,1457],"[dispatch, gyms.length]",[5167,5168],"",[5167,5167],"\\"]