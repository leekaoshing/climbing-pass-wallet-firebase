[{"D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-frontend\\src\\index.js":"1","D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-frontend\\src\\App.js":"2","D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-frontend\\src\\serviceWorker.js":"3","D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-frontend\\src\\app\\store.js":"4","D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-frontend\\src\\features\\passes\\Passes.js":"5","D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-frontend\\src\\features\\passes\\userSlice.js":"6","D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-frontend\\src\\features\\passes\\ConfirmationDialog.js":"7","D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-frontend\\src\\features\\passes\\gymSlice.js":"8","D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-frontend\\src\\features\\passes\\UserDetails.js":"9","D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-frontend\\src\\features\\passes\\UserSearch.js":"10","D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-frontend\\src\\features\\passes\\AddGymDialog.js":"11","D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-frontend\\src\\features\\passes\\UpdateResultDialog.js":"12","D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-frontend\\src\\features\\passes\\CreateUserForm.js":"13"},{"size":644,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":690,"mtime":1610544613733,"results":"16","hashOfConfig":"15"},{"size":5141,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":269,"mtime":1610420311195,"results":"18","hashOfConfig":"15"},{"size":2594,"mtime":1610551801724,"results":"19","hashOfConfig":"15"},{"size":8121,"mtime":1610613341119,"results":"20","hashOfConfig":"15"},{"size":2785,"mtime":1610613614647,"results":"21","hashOfConfig":"15"},{"size":2242,"mtime":1610541573218,"results":"22","hashOfConfig":"15"},{"size":5907,"mtime":1610550723517,"results":"23","hashOfConfig":"15"},{"size":1593,"mtime":1610549785981,"results":"24","hashOfConfig":"15"},{"size":2894,"mtime":1610541640233,"results":"25","hashOfConfig":"15"},{"size":1462,"mtime":1610549785997,"results":"26","hashOfConfig":"15"},{"size":9160,"mtime":1610613974449,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"q6th6i",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-frontend\\src\\index.js",[],["60","61"],"D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-frontend\\src\\App.js",["62"],"import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport { Passes } from './features/passes/Passes';\r\nimport { CreateUserForm } from './features/passes/CreateUserForm';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Container maxWidth=\"xs\">\r\n        \r\n      <header style={{ height: '100px', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n      \r\n        Welcome to your climbing pass wallet\r\n        \r\n        &nbsp; &nbsp;\r\n        <CreateUserForm />\r\n      </header>\r\n      \r\n        <Passes />\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-frontend\\src\\serviceWorker.js",[],"D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-frontend\\src\\app\\store.js",[],"D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-frontend\\src\\features\\passes\\Passes.js",["63","64","65","66","67","68","69","70","71","72","73"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  addGymToUser,\r\n  decrementPass,\r\n  fetchUserByUsername,\r\n  incrementPass,\r\n  requestConfirmation,\r\n  selectError,\r\n  selectIsLoadingUser,\r\n  selectIsLoadingUpdateUser,\r\n  selectUser,\r\n  selectShowConfirmation,\r\n  selectDatabaseUser,\r\n  differentiateUserPasses,\r\n  showAddGymDialog\r\n} from './userSlice';\r\nimport {\r\n  fetchGymById,\r\n  fetchGyms,\r\n  selectGyms,\r\n  selectGymNameForId,\r\n} from './gymSlice';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { ConfirmationDialog } from './ConfirmationDialog';\r\nimport { UpdateResultDialog } from './UpdateResultDialog';\r\nimport { AddGymDialog } from './AddGymDialog';\r\nimport { UserDetails } from './UserDetails';\r\nimport { UserSearch } from './UserSearch';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport function Passes() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (gyms.length === 0) {\r\n      dispatch(fetchGyms());\r\n    }\r\n  }, [])\r\n\r\n  const user = useSelector(selectUser);\r\n  const databaseUser = useSelector(selectDatabaseUser);\r\n  const isLoadingUser = useSelector(selectIsLoadingUser);\r\n  const isLoadingUpdateUser = useSelector(selectIsLoadingUpdateUser);\r\n  const gyms = useSelector(selectGyms);\r\n\r\n  return (\r\n    <div>\r\n      <UserSearch />\r\n      {\r\n        isLoadingUser ?\r\n          <CircularProgress />\r\n          :\r\n          user !== null ?\r\n            <div>\r\n\r\n              <UserDetails />\r\n              <Button\r\n                aria-label=\"addGym\"\r\n                variant=\"outlined\"\r\n                onClick={() => dispatch(showAddGymDialog())}\r\n              >\r\n                Add gym\r\n              </Button>\r\n              <AddGymDialog />\r\n\r\n              <br />\r\n              <br />\r\n\r\n              {isLoadingUpdateUser ?\r\n                <CircularProgress />\r\n                :\r\n              <Button\r\n                disabled={Object.keys(differentiateUserPasses(databaseUser, user)).length === 0}\r\n                aria-label=\"saveChanges\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                onClick={() => dispatch(requestConfirmation())}\r\n              >\r\n                  Save changes\r\n              </Button>\r\n              }\r\n              <ConfirmationDialog />\r\n\r\n              <UpdateResultDialog />\r\n              <br />\r\n              <br />\r\n            </div>\r\n            :\r\n            null\r\n      }\r\n    </div>\r\n  );\r\n}\r\n","D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-frontend\\src\\features\\passes\\userSlice.js",[],"D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-frontend\\src\\features\\passes\\ConfirmationDialog.js",[],"D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-frontend\\src\\features\\passes\\gymSlice.js",[],"D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-frontend\\src\\features\\passes\\UserDetails.js",["74","75","76"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n    decrementPass,\r\n    differentiateUserPasses,\r\n    incrementPass,\r\n    selectUser,\r\n    selectDatabaseUser,\r\n    resetUser,\r\n} from './userSlice';\r\nimport {\r\n    fetchGyms,\r\n    selectGyms,\r\n} from './gymSlice';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport ReplayIcon from '@material-ui/icons/Replay';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport { blue } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n    },\r\n    avatar: {\r\n        backgroundColor: blue[100],\r\n        color: blue[600],\r\n    },\r\n}));\r\n\r\nexport function UserDetails() {\r\n    const dispatch = useDispatch();\r\n\r\n    const databaseUser = useSelector(selectDatabaseUser);\r\n    const user = useSelector(selectUser);\r\n    const gyms = useSelector(selectGyms);\r\n\r\n    const passDifferences = databaseUser === null ? {} : differentiateUserPasses(databaseUser, user);\r\n\r\n    const getTextStyle = (gym) => {\r\n        if (passDifferences[gym] !== undefined) {\r\n            return { color: blue[600], fontWeight: 'bold', fontSize: '14px' };\r\n        }\r\n        return { fontSize: '14px' };\r\n    }\r\n\r\n    const classes = useStyles();\r\n    var counter = 0;\r\n    console.log('otan', user.passes.size)\r\n\r\n    return (\r\n        user !== null ?\r\n            <div className={classes.root}>\r\n                <List>\r\n                    <ListItem style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                        <Paper className={classes.paper} elevation={2}>\r\n                            {user['firstName'] + ' ' + user['lastName'] + ' ('}<i>{user['username']}</i>{')'}\r\n                        </Paper>\r\n                        <IconButton aria-label=\"incrementPass\" onClick={() => dispatch(resetUser())}>\r\n                            <ReplayIcon />\r\n                        </IconButton>\r\n                    </ListItem>\r\n                    {   \r\n                        user !== null && user['passes'] !== null ?\r\n                            Object.keys(user['passes']).length !== 0 ?\r\n                                Object.keys(user['passes'])\r\n                                    .sort()\r\n                                    .map(gym => {\r\n                                        counter += 1;\r\n                                        return <div key={gym}>\r\n                                            {counter !== 1 ? <Divider variant=\"middle\" /> : null}\r\n                                            <ListItem style={{ height: '60px' }}>\r\n                                                <Grid container>\r\n                                                    <Grid item xs={2} style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                                                        <Avatar className={classes.avatar}>\r\n                                                            {gym}\r\n                                                        </Avatar>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={6} style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                                                        <span style={{ fontSize: '12px' }}>{gyms.find(g => g.id === gym)['name']}</span>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={1} style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                                                        <IconButton aria-label=\"decrementPass\" onClick={() => dispatch(decrementPass(gym))}>\r\n                                                            <RemoveIcon />\r\n                                                        </IconButton>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={2} style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                                                        <span style={getTextStyle(gym)}>{user['passes'][gym]}</span>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={1} style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                                                        <IconButton aria-label=\"incrementPass\" onClick={() => dispatch(incrementPass(gym))}>\r\n                                                            <AddIcon />\r\n                                                        </IconButton>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </ListItem>\r\n                                        </div>\r\n                                    })\r\n                                :\r\n                                <ListItem style={{ height: '60px', display: 'flex', alignItems: 'center', justifyContent: 'center' }}><b>No passes here yet. Try adding some!</b></ListItem>\r\n                            :\r\n                            null\r\n\r\n                    }\r\n                </List>\r\n            </div>\r\n            :\r\n            null\r\n    );\r\n}","D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-frontend\\src\\features\\passes\\UserSearch.js",["77","78"],"import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n    fetchUserByUsername,\r\n    selectFetchUserError,\r\n} from './userSlice';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { blue } from '@material-ui/core/colors';\r\n\r\nexport function UserSearch() {\r\n    const dispatch = useDispatch();\r\n    const [username, setUsername] = useState('');\r\n    const fetchUserError = useSelector(selectFetchUserError);\r\n\r\n    return (\r\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n            <TextField\r\n                error={fetchUserError !== null}\r\n                id=\"outlined-error-helper-text\"\r\n                label=\"Enter username\"\r\n                helperText={fetchUserError}\r\n                variant=\"outlined\"\r\n                value={username}\r\n                onChange={e => setUsername(e.target.value)}\r\n                onKeyDown={e => {\r\n                    if (e.key === 'Enter') {\r\n                        dispatch(fetchUserByUsername(username))\r\n                    }\r\n                }}\r\n            />\r\n            &nbsp; &nbsp;\r\n            <Button\r\n                disabled={username === ''}\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                    dispatch(fetchUserByUsername(username))\r\n                }}\r\n            >\r\n                Search\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\n","D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-frontend\\src\\features\\passes\\AddGymDialog.js",["79","80","81","82","83","84","85","86","87","88"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n    addGymToUser,\r\n    closeAddGymDialog,\r\n    selectShowAddGymDialog,\r\n    selectUser\r\n} from './userSlice';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { fetchGyms, selectGyms } from './gymSlice';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\n\r\nexport function AddGymDialog() {\r\n    const dispatch = useDispatch();\r\n    const gyms = useSelector(selectGyms);\r\n    const user = useSelector(selectUser);\r\n    const showAddGymDialog = useSelector(selectShowAddGymDialog);\r\n\r\n    const handleSelect = (gymId) => {\r\n        dispatch(addGymToUser(gymId));\r\n        dispatch(closeAddGymDialog());\r\n    };\r\n\r\n    const handleClose = () => {\r\n        dispatch(closeAddGymDialog());\r\n    }\r\n\r\n    return (\r\n        <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={showAddGymDialog}>\r\n            <DialogTitle id=\"add-gym-dialog-title\">Add new gym:</DialogTitle>\r\n            <List>\r\n                {\r\n                    gyms.map(gym => {\r\n                        if (user.passes != null && !Object.keys(user.passes).includes(gym.id)) {\r\n                            return <ListItem key={gym.id} button onClick={() => handleSelect(gym.id)}>\r\n                                <ListItemText primary={gym.name} />\r\n                            </ListItem>\r\n                        }\r\n                    })\r\n                }\r\n            </List>\r\n        </Dialog>\r\n\r\n        // <div>\r\n        //     <FormControl className={classes.formControl}>\r\n        //         <InputLabel htmlFor=\"gym-native-simple\">Add gym</InputLabel>\r\n        //         <Select\r\n        //             native\r\n        //             value={gym}\r\n        //             onChange={handleChange}\r\n        //             inputProps={{\r\n        //                 name: 'gym',\r\n        //                 id: 'gym-native-simple',\r\n        //             }}\r\n        //         >\r\n        //             <option aria-label=\"None\" value=\"\" />\r\n        //             {optionDivs}\r\n        //         </Select>\r\n        //     </FormControl>\r\n        // </div>\r\n    );\r\n}\r\n","D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-frontend\\src\\features\\passes\\UpdateResultDialog.js",[],"D:\\Documents and Settings\\Lee\\My Documents\\Github Projects\\climbing-pass-wallet-frontend\\src\\features\\passes\\CreateUserForm.js",["89","90","91","92","93","94","95","96","97","98","99","100","101"],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":2,"column":8,"nodeType":"108","messageId":"109","endLine":2,"endColumn":12},{"ruleId":"106","severity":1,"message":"110","line":1,"column":28,"nodeType":"108","messageId":"109","endLine":1,"endColumn":36},{"ruleId":"106","severity":1,"message":"111","line":4,"column":3,"nodeType":"108","messageId":"109","endLine":4,"endColumn":15},{"ruleId":"106","severity":1,"message":"112","line":5,"column":3,"nodeType":"108","messageId":"109","endLine":5,"endColumn":16},{"ruleId":"106","severity":1,"message":"113","line":6,"column":3,"nodeType":"108","messageId":"109","endLine":6,"endColumn":22},{"ruleId":"106","severity":1,"message":"114","line":7,"column":3,"nodeType":"108","messageId":"109","endLine":7,"endColumn":16},{"ruleId":"106","severity":1,"message":"115","line":9,"column":3,"nodeType":"108","messageId":"109","endLine":9,"endColumn":14},{"ruleId":"106","severity":1,"message":"116","line":13,"column":3,"nodeType":"108","messageId":"109","endLine":13,"endColumn":25},{"ruleId":"106","severity":1,"message":"117","line":19,"column":3,"nodeType":"108","messageId":"109","endLine":19,"endColumn":15},{"ruleId":"106","severity":1,"message":"118","line":22,"column":3,"nodeType":"108","messageId":"109","endLine":22,"endColumn":21},{"ruleId":"106","severity":1,"message":"119","line":24,"column":10,"nodeType":"108","messageId":"109","endLine":24,"endColumn":20},{"ruleId":"120","severity":1,"message":"121","line":41,"column":6,"nodeType":"122","endLine":41,"endColumn":8,"suggestions":"123"},{"ruleId":"106","severity":1,"message":"124","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":26},{"ruleId":"106","severity":1,"message":"110","line":1,"column":28,"nodeType":"108","messageId":"109","endLine":1,"endColumn":36},{"ruleId":"106","severity":1,"message":"125","line":12,"column":5,"nodeType":"108","messageId":"109","endLine":12,"endColumn":14},{"ruleId":"106","severity":1,"message":"119","line":7,"column":10,"nodeType":"108","messageId":"109","endLine":7,"endColumn":20},{"ruleId":"106","severity":1,"message":"126","line":10,"column":10,"nodeType":"108","messageId":"109","endLine":10,"endColumn":14},{"ruleId":"106","severity":1,"message":"124","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":26},{"ruleId":"106","severity":1,"message":"110","line":1,"column":28,"nodeType":"108","messageId":"109","endLine":1,"endColumn":36},{"ruleId":"106","severity":1,"message":"127","line":12,"column":8,"nodeType":"108","messageId":"109","endLine":12,"endColumn":14},{"ruleId":"106","severity":1,"message":"128","line":15,"column":8,"nodeType":"108","messageId":"109","endLine":15,"endColumn":22},{"ruleId":"106","severity":1,"message":"129","line":17,"column":8,"nodeType":"108","messageId":"109","endLine":17,"endColumn":18},{"ruleId":"106","severity":1,"message":"130","line":18,"column":8,"nodeType":"108","messageId":"109","endLine":18,"endColumn":19},{"ruleId":"106","severity":1,"message":"131","line":19,"column":8,"nodeType":"108","messageId":"109","endLine":19,"endColumn":14},{"ruleId":"106","severity":1,"message":"125","line":20,"column":10,"nodeType":"108","messageId":"109","endLine":20,"endColumn":19},{"ruleId":"106","severity":1,"message":"132","line":22,"column":7,"nodeType":"108","messageId":"109","endLine":22,"endColumn":16},{"ruleId":"133","severity":1,"message":"134","line":53,"column":34,"nodeType":"135","messageId":"136","endLine":53,"endColumn":36},{"ruleId":"106","severity":1,"message":"124","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":26},{"ruleId":"106","severity":1,"message":"137","line":18,"column":8,"nodeType":"108","messageId":"109","endLine":18,"endColumn":12},{"ruleId":"106","severity":1,"message":"138","line":19,"column":8,"nodeType":"108","messageId":"109","endLine":19,"endColumn":16},{"ruleId":"106","severity":1,"message":"128","line":20,"column":8,"nodeType":"108","messageId":"109","endLine":20,"endColumn":22},{"ruleId":"106","severity":1,"message":"139","line":21,"column":8,"nodeType":"108","messageId":"109","endLine":21,"endColumn":20},{"ruleId":"106","severity":1,"message":"129","line":23,"column":8,"nodeType":"108","messageId":"109","endLine":23,"endColumn":18},{"ruleId":"106","severity":1,"message":"130","line":24,"column":8,"nodeType":"108","messageId":"109","endLine":24,"endColumn":19},{"ruleId":"106","severity":1,"message":"140","line":25,"column":8,"nodeType":"108","messageId":"109","endLine":25,"endColumn":22},{"ruleId":"106","severity":1,"message":"141","line":26,"column":8,"nodeType":"108","messageId":"109","endLine":26,"endColumn":13},{"ruleId":"106","severity":1,"message":"131","line":31,"column":8,"nodeType":"108","messageId":"109","endLine":31,"endColumn":14},{"ruleId":"106","severity":1,"message":"125","line":32,"column":10,"nodeType":"108","messageId":"109","endLine":32,"endColumn":19},{"ruleId":"106","severity":1,"message":"142","line":32,"column":21,"nodeType":"108","messageId":"109","endLine":32,"endColumn":31},{"ruleId":"143","severity":1,"message":"144","line":157,"column":47,"nodeType":"145","messageId":"146","endLine":157,"endColumn":48,"suggestions":"147"},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'addGymToUser' is defined but never used.","'decrementPass' is defined but never used.","'fetchUserByUsername' is defined but never used.","'incrementPass' is defined but never used.","'selectError' is defined but never used.","'selectShowConfirmation' is defined but never used.","'fetchGymById' is defined but never used.","'selectGymNameForId' is defined but never used.","'makeStyles' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'gyms.length'. Either include them or remove the dependency array.","ArrayExpression",["150"],"'useEffect' is defined but never used.","'fetchGyms' is defined but never used.","'blue' is defined but never used.","'Button' is defined but never used.","'ListItemAvatar' is defined but never used.","'InputLabel' is defined but never used.","'FormControl' is defined but never used.","'Select' is defined but never used.","'useStyles' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'FormHelperText' is defined but never used.","'Input' is defined but never used.","'selectGyms' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["151","152"],"no-global-assign","no-unsafe-negation",{"desc":"153","fix":"154"},{"messageId":"155","fix":"156","desc":"157"},{"messageId":"158","fix":"159","desc":"160"},"Update the dependencies array to be: [dispatch, gyms.length]",{"range":"161","text":"162"},"removeEscape",{"range":"163","text":"164"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"165","text":"166"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[1120,1122],"[dispatch, gyms.length]",[5167,5168],"",[5167,5167],"\\"]